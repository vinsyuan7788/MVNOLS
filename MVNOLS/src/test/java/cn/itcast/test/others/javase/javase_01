Why is Java popular?
-- Platform independent: runnable without any modificaiton in any OS environment
   -- Thanks to JVM (Java Virtual Machine)
-- OOP (Object-Oriented Programming) thought
   -- DifferenceS between C++ and Java: pointer; memory management v.s. garbage collection; etc.
   -- Encapsulation; Abstraction; Inheritance|Polymorphism: refer to "TestOOP.java"
   -- Advantages: JavaBean|domain mapping; Reusability 
   
String v.s. StringBuilder v.s. StringBuffer: refer to "TestString.java"
-- String object is immutable, while StringBuilder|StringBuffer is not
-- StringBuffer is synchronized|thread-safe, while StringBuilder is not

Keywords & modifiers: refer to "TestKeywords.java"

Variable arguments: allow to call a method with any number of arguments in the same type
-- refer to "TestArgument.java"

Others:
Static|Instance variable
Pacakge
Anonymous class (the class you know it is used only once)
wrapper class (autoboxing & unboxing)
toString(): a text presentation of detailed information of a class (e.g., class variables)
-- A default toString() method is provided by Java (but not the desirable one usually)

